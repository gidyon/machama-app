// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: loan.proto

package loan

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LoanStatus int32

const (
	LoanStatus_WAITING_APPROVAL        LoanStatus = 0
	LoanStatus_APPROVED                LoanStatus = 1
	LoanStatus_FUNDS_WITHDRAWN_ACCOUNT LoanStatus = 2
	LoanStatus_WAITING_FUNDS_TRANSFER  LoanStatus = 3
	LoanStatus_FUNDS_TRANSFERED        LoanStatus = 4
)

// Enum value maps for LoanStatus.
var (
	LoanStatus_name = map[int32]string{
		0: "WAITING_APPROVAL",
		1: "APPROVED",
		2: "FUNDS_WITHDRAWN_ACCOUNT",
		3: "WAITING_FUNDS_TRANSFER",
		4: "FUNDS_TRANSFERED",
	}
	LoanStatus_value = map[string]int32{
		"WAITING_APPROVAL":        0,
		"APPROVED":                1,
		"FUNDS_WITHDRAWN_ACCOUNT": 2,
		"WAITING_FUNDS_TRANSFER":  3,
		"FUNDS_TRANSFERED":        4,
	}
)

func (x LoanStatus) Enum() *LoanStatus {
	p := new(LoanStatus)
	*p = x
	return p
}

func (x LoanStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoanStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_loan_proto_enumTypes[0].Descriptor()
}

func (LoanStatus) Type() protoreflect.EnumType {
	return &file_loan_proto_enumTypes[0]
}

func (x LoanStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoanStatus.Descriptor instead.
func (LoanStatus) EnumDescriptor() ([]byte, []int) {
	return file_loan_proto_rawDescGZIP(), []int{0}
}

type LoanProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId           string  `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ChamaId             string  `protobuf:"bytes,2,opt,name=chama_id,json=chamaId,proto3" json:"chama_id,omitempty"`
	Name                string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description         string  `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	LoanDurationDays    int32   `protobuf:"varint,5,opt,name=loan_duration_days,json=loanDurationDays,proto3" json:"loan_duration_days,omitempty"`
	InterestRate        float32 `protobuf:"fixed32,6,opt,name=interest_rate,json=interestRate,proto3" json:"interest_rate,omitempty"`
	LoanMinimumAmount   float64 `protobuf:"fixed64,7,opt,name=loan_minimum_amount,json=loanMinimumAmount,proto3" json:"loan_minimum_amount,omitempty"`
	LoanMaximumAmount   float64 `protobuf:"fixed64,8,opt,name=loan_maximum_amount,json=loanMaximumAmount,proto3" json:"loan_maximum_amount,omitempty"`
	LoanAccountBalance  float64 `protobuf:"fixed64,9,opt,name=loan_account_balance,json=loanAccountBalance,proto3" json:"loan_account_balance,omitempty"`
	LoanInterestBalance float64 `protobuf:"fixed64,10,opt,name=loan_interest_balance,json=loanInterestBalance,proto3" json:"loan_interest_balance,omitempty"`
	LoanSettledBalance  float64 `protobuf:"fixed64,11,opt,name=loan_settled_balance,json=loanSettledBalance,proto3" json:"loan_settled_balance,omitempty"`
	SettledLoans        int32   `protobuf:"varint,12,opt,name=settled_loans,json=settledLoans,proto3" json:"settled_loans,omitempty"`
	ActiveLoans         int32   `protobuf:"varint,13,opt,name=active_loans,json=activeLoans,proto3" json:"active_loans,omitempty"`
	TotalLoans          int32   `protobuf:"varint,14,opt,name=total_loans,json=totalLoans,proto3" json:"total_loans,omitempty"`
	UpdatedDate         string  `protobuf:"bytes,15,opt,name=updated_date,json=updatedDate,proto3" json:"updated_date,omitempty"`
	CreatedDate         string  `protobuf:"bytes,16,opt,name=created_date,json=createdDate,proto3" json:"created_date,omitempty"`
}

func (x *LoanProduct) Reset() {
	*x = LoanProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProduct) ProtoMessage() {}

func (x *LoanProduct) ProtoReflect() protoreflect.Message {
	mi := &file_loan_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProduct.ProtoReflect.Descriptor instead.
func (*LoanProduct) Descriptor() ([]byte, []int) {
	return file_loan_proto_rawDescGZIP(), []int{0}
}

func (x *LoanProduct) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *LoanProduct) GetChamaId() string {
	if x != nil {
		return x.ChamaId
	}
	return ""
}

func (x *LoanProduct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LoanProduct) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *LoanProduct) GetLoanDurationDays() int32 {
	if x != nil {
		return x.LoanDurationDays
	}
	return 0
}

func (x *LoanProduct) GetInterestRate() float32 {
	if x != nil {
		return x.InterestRate
	}
	return 0
}

func (x *LoanProduct) GetLoanMinimumAmount() float64 {
	if x != nil {
		return x.LoanMinimumAmount
	}
	return 0
}

func (x *LoanProduct) GetLoanMaximumAmount() float64 {
	if x != nil {
		return x.LoanMaximumAmount
	}
	return 0
}

func (x *LoanProduct) GetLoanAccountBalance() float64 {
	if x != nil {
		return x.LoanAccountBalance
	}
	return 0
}

func (x *LoanProduct) GetLoanInterestBalance() float64 {
	if x != nil {
		return x.LoanInterestBalance
	}
	return 0
}

func (x *LoanProduct) GetLoanSettledBalance() float64 {
	if x != nil {
		return x.LoanSettledBalance
	}
	return 0
}

func (x *LoanProduct) GetSettledLoans() int32 {
	if x != nil {
		return x.SettledLoans
	}
	return 0
}

func (x *LoanProduct) GetActiveLoans() int32 {
	if x != nil {
		return x.ActiveLoans
	}
	return 0
}

func (x *LoanProduct) GetTotalLoans() int32 {
	if x != nil {
		return x.TotalLoans
	}
	return 0
}

func (x *LoanProduct) GetUpdatedDate() string {
	if x != nil {
		return x.UpdatedDate
	}
	return ""
}

func (x *LoanProduct) GetCreatedDate() string {
	if x != nil {
		return x.CreatedDate
	}
	return ""
}

type Loan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoanId        string     `protobuf:"bytes,1,opt,name=loan_id,json=loanId,proto3" json:"loan_id,omitempty"`
	ChamaId       string     `protobuf:"bytes,2,opt,name=chama_id,json=chamaId,proto3" json:"chama_id,omitempty"`
	ProductId     string     `protobuf:"bytes,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	MemberId      string     `protobuf:"bytes,4,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	LoaneeNames   string     `protobuf:"bytes,5,opt,name=loanee_names,json=loaneeNames,proto3" json:"loanee_names,omitempty"`
	LoaneePhone   string     `protobuf:"bytes,6,opt,name=loanee_phone,json=loaneePhone,proto3" json:"loanee_phone,omitempty"`
	LoaneeEmail   string     `protobuf:"bytes,7,opt,name=loanee_email,json=loaneeEmail,proto3" json:"loanee_email,omitempty"`
	NationalId    string     `protobuf:"bytes,8,opt,name=national_id,json=nationalId,proto3" json:"national_id,omitempty"`
	Approved      bool       `protobuf:"varint,9,opt,name=approved,proto3" json:"approved,omitempty"`
	Status        LoanStatus `protobuf:"varint,17,opt,name=status,proto3,enum=gidyon.loan.LoanStatus" json:"status,omitempty"`
	DurationDays  int32      `protobuf:"varint,10,opt,name=duration_days,json=durationDays,proto3" json:"duration_days,omitempty"`
	InterestRate  float32    `protobuf:"fixed32,11,opt,name=interest_rate,json=interestRate,proto3" json:"interest_rate,omitempty"`
	LoanAmount    float64    `protobuf:"fixed64,12,opt,name=loan_amount,json=loanAmount,proto3" json:"loan_amount,omitempty"`
	SettledAmount float64    `protobuf:"fixed64,13,opt,name=settled_amount,json=settledAmount,proto3" json:"settled_amount,omitempty"`
	PenaltyAmount float64    `protobuf:"fixed64,14,opt,name=penalty_amount,json=penaltyAmount,proto3" json:"penalty_amount,omitempty"`
	UpdatedDate   string     `protobuf:"bytes,15,opt,name=updated_date,json=updatedDate,proto3" json:"updated_date,omitempty"`
	BorrowedDate  string     `protobuf:"bytes,16,opt,name=borrowed_date,json=borrowedDate,proto3" json:"borrowed_date,omitempty"`
}

func (x *Loan) Reset() {
	*x = Loan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Loan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Loan) ProtoMessage() {}

func (x *Loan) ProtoReflect() protoreflect.Message {
	mi := &file_loan_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Loan.ProtoReflect.Descriptor instead.
func (*Loan) Descriptor() ([]byte, []int) {
	return file_loan_proto_rawDescGZIP(), []int{1}
}

func (x *Loan) GetLoanId() string {
	if x != nil {
		return x.LoanId
	}
	return ""
}

func (x *Loan) GetChamaId() string {
	if x != nil {
		return x.ChamaId
	}
	return ""
}

func (x *Loan) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *Loan) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *Loan) GetLoaneeNames() string {
	if x != nil {
		return x.LoaneeNames
	}
	return ""
}

func (x *Loan) GetLoaneePhone() string {
	if x != nil {
		return x.LoaneePhone
	}
	return ""
}

func (x *Loan) GetLoaneeEmail() string {
	if x != nil {
		return x.LoaneeEmail
	}
	return ""
}

func (x *Loan) GetNationalId() string {
	if x != nil {
		return x.NationalId
	}
	return ""
}

func (x *Loan) GetApproved() bool {
	if x != nil {
		return x.Approved
	}
	return false
}

func (x *Loan) GetStatus() LoanStatus {
	if x != nil {
		return x.Status
	}
	return LoanStatus_WAITING_APPROVAL
}

func (x *Loan) GetDurationDays() int32 {
	if x != nil {
		return x.DurationDays
	}
	return 0
}

func (x *Loan) GetInterestRate() float32 {
	if x != nil {
		return x.InterestRate
	}
	return 0
}

func (x *Loan) GetLoanAmount() float64 {
	if x != nil {
		return x.LoanAmount
	}
	return 0
}

func (x *Loan) GetSettledAmount() float64 {
	if x != nil {
		return x.SettledAmount
	}
	return 0
}

func (x *Loan) GetPenaltyAmount() float64 {
	if x != nil {
		return x.PenaltyAmount
	}
	return 0
}

func (x *Loan) GetUpdatedDate() string {
	if x != nil {
		return x.UpdatedDate
	}
	return ""
}

func (x *Loan) GetBorrowedDate() string {
	if x != nil {
		return x.BorrowedDate
	}
	return ""
}

type CreateLoanProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoanProduct *LoanProduct `protobuf:"bytes,1,opt,name=loan_product,json=loanProduct,proto3" json:"loan_product,omitempty"`
}

func (x *CreateLoanProductRequest) Reset() {
	*x = CreateLoanProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLoanProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLoanProductRequest) ProtoMessage() {}

func (x *CreateLoanProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_loan_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLoanProductRequest.ProtoReflect.Descriptor instead.
func (*CreateLoanProductRequest) Descriptor() ([]byte, []int) {
	return file_loan_proto_rawDescGZIP(), []int{2}
}

func (x *CreateLoanProductRequest) GetLoanProduct() *LoanProduct {
	if x != nil {
		return x.LoanProduct
	}
	return nil
}

type UpdateLoanProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoanProduct *LoanProduct `protobuf:"bytes,1,opt,name=loan_product,json=loanProduct,proto3" json:"loan_product,omitempty"`
}

func (x *UpdateLoanProductRequest) Reset() {
	*x = UpdateLoanProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLoanProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLoanProductRequest) ProtoMessage() {}

func (x *UpdateLoanProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_loan_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLoanProductRequest.ProtoReflect.Descriptor instead.
func (*UpdateLoanProductRequest) Descriptor() ([]byte, []int) {
	return file_loan_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateLoanProductRequest) GetLoanProduct() *LoanProduct {
	if x != nil {
		return x.LoanProduct
	}
	return nil
}

type DeleteLoanProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *DeleteLoanProductRequest) Reset() {
	*x = DeleteLoanProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLoanProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLoanProductRequest) ProtoMessage() {}

func (x *DeleteLoanProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_loan_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLoanProductRequest.ProtoReflect.Descriptor instead.
func (*DeleteLoanProductRequest) Descriptor() ([]byte, []int) {
	return file_loan_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteLoanProductRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type LoanProductFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChamaIds []string `protobuf:"bytes,1,rep,name=chama_ids,json=chamaIds,proto3" json:"chama_ids,omitempty"`
}

func (x *LoanProductFilter) Reset() {
	*x = LoanProductFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanProductFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanProductFilter) ProtoMessage() {}

func (x *LoanProductFilter) ProtoReflect() protoreflect.Message {
	mi := &file_loan_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanProductFilter.ProtoReflect.Descriptor instead.
func (*LoanProductFilter) Descriptor() ([]byte, []int) {
	return file_loan_proto_rawDescGZIP(), []int{5}
}

func (x *LoanProductFilter) GetChamaIds() []string {
	if x != nil {
		return x.ChamaIds
	}
	return nil
}

type ListLoanProductsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter    *LoanProductFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	PageToken string             `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize  int32              `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListLoanProductsRequest) Reset() {
	*x = ListLoanProductsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLoanProductsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLoanProductsRequest) ProtoMessage() {}

func (x *ListLoanProductsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_loan_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLoanProductsRequest.ProtoReflect.Descriptor instead.
func (*ListLoanProductsRequest) Descriptor() ([]byte, []int) {
	return file_loan_proto_rawDescGZIP(), []int{6}
}

func (x *ListLoanProductsRequest) GetFilter() *LoanProductFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListLoanProductsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListLoanProductsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListLoanProductsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoanProducts  []*LoanProduct `protobuf:"bytes,1,rep,name=loan_products,json=loanProducts,proto3" json:"loan_products,omitempty"`
	NextPageToken string         `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListLoanProductsResponse) Reset() {
	*x = ListLoanProductsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLoanProductsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLoanProductsResponse) ProtoMessage() {}

func (x *ListLoanProductsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_loan_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLoanProductsResponse.ProtoReflect.Descriptor instead.
func (*ListLoanProductsResponse) Descriptor() ([]byte, []int) {
	return file_loan_proto_rawDescGZIP(), []int{7}
}

func (x *ListLoanProductsResponse) GetLoanProducts() []*LoanProduct {
	if x != nil {
		return x.LoanProducts
	}
	return nil
}

func (x *ListLoanProductsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetLoanProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *GetLoanProductRequest) Reset() {
	*x = GetLoanProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLoanProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoanProductRequest) ProtoMessage() {}

func (x *GetLoanProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_loan_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoanProductRequest.ProtoReflect.Descriptor instead.
func (*GetLoanProductRequest) Descriptor() ([]byte, []int) {
	return file_loan_proto_rawDescGZIP(), []int{8}
}

func (x *GetLoanProductRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type CreateLoanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Loan *Loan `protobuf:"bytes,1,opt,name=loan,proto3" json:"loan,omitempty"`
}

func (x *CreateLoanRequest) Reset() {
	*x = CreateLoanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLoanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLoanRequest) ProtoMessage() {}

func (x *CreateLoanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_loan_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLoanRequest.ProtoReflect.Descriptor instead.
func (*CreateLoanRequest) Descriptor() ([]byte, []int) {
	return file_loan_proto_rawDescGZIP(), []int{9}
}

func (x *CreateLoanRequest) GetLoan() *Loan {
	if x != nil {
		return x.Loan
	}
	return nil
}

type UpdateLoanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Loan *Loan `protobuf:"bytes,1,opt,name=loan,proto3" json:"loan,omitempty"`
}

func (x *UpdateLoanRequest) Reset() {
	*x = UpdateLoanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLoanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLoanRequest) ProtoMessage() {}

func (x *UpdateLoanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_loan_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLoanRequest.ProtoReflect.Descriptor instead.
func (*UpdateLoanRequest) Descriptor() ([]byte, []int) {
	return file_loan_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateLoanRequest) GetLoan() *Loan {
	if x != nil {
		return x.Loan
	}
	return nil
}

type LoanFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChamaIds   []string `protobuf:"bytes,1,rep,name=chama_ids,json=chamaIds,proto3" json:"chama_ids,omitempty"`
	ProductIds []string `protobuf:"bytes,2,rep,name=product_ids,json=productIds,proto3" json:"product_ids,omitempty"`
}

func (x *LoanFilter) Reset() {
	*x = LoanFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoanFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoanFilter) ProtoMessage() {}

func (x *LoanFilter) ProtoReflect() protoreflect.Message {
	mi := &file_loan_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoanFilter.ProtoReflect.Descriptor instead.
func (*LoanFilter) Descriptor() ([]byte, []int) {
	return file_loan_proto_rawDescGZIP(), []int{11}
}

func (x *LoanFilter) GetChamaIds() []string {
	if x != nil {
		return x.ChamaIds
	}
	return nil
}

func (x *LoanFilter) GetProductIds() []string {
	if x != nil {
		return x.ProductIds
	}
	return nil
}

type ListLoansRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter    *LoanFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	PageToken string      `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize  int32       `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListLoansRequest) Reset() {
	*x = ListLoansRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLoansRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLoansRequest) ProtoMessage() {}

func (x *ListLoansRequest) ProtoReflect() protoreflect.Message {
	mi := &file_loan_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLoansRequest.ProtoReflect.Descriptor instead.
func (*ListLoansRequest) Descriptor() ([]byte, []int) {
	return file_loan_proto_rawDescGZIP(), []int{12}
}

func (x *ListLoansRequest) GetFilter() *LoanFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListLoansRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListLoansRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListLoansResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Loans         []*Loan `protobuf:"bytes,1,rep,name=loans,proto3" json:"loans,omitempty"`
	NextPageToken string  `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListLoansResponse) Reset() {
	*x = ListLoansResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLoansResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLoansResponse) ProtoMessage() {}

func (x *ListLoansResponse) ProtoReflect() protoreflect.Message {
	mi := &file_loan_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLoansResponse.ProtoReflect.Descriptor instead.
func (*ListLoansResponse) Descriptor() ([]byte, []int) {
	return file_loan_proto_rawDescGZIP(), []int{13}
}

func (x *ListLoansResponse) GetLoans() []*Loan {
	if x != nil {
		return x.Loans
	}
	return nil
}

func (x *ListLoansResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetLoanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoanId string `protobuf:"bytes,1,opt,name=loan_id,json=loanId,proto3" json:"loan_id,omitempty"`
}

func (x *GetLoanRequest) Reset() {
	*x = GetLoanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLoanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoanRequest) ProtoMessage() {}

func (x *GetLoanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_loan_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoanRequest.ProtoReflect.Descriptor instead.
func (*GetLoanRequest) Descriptor() ([]byte, []int) {
	return file_loan_proto_rawDescGZIP(), []int{14}
}

func (x *GetLoanRequest) GetLoanId() string {
	if x != nil {
		return x.LoanId
	}
	return ""
}

type ApproveLoanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoanId      string `protobuf:"bytes,1,opt,name=loan_id,json=loanId,proto3" json:"loan_id,omitempty"`
	AccountName string `protobuf:"bytes,2,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
}

func (x *ApproveLoanRequest) Reset() {
	*x = ApproveLoanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_loan_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveLoanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveLoanRequest) ProtoMessage() {}

func (x *ApproveLoanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_loan_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveLoanRequest.ProtoReflect.Descriptor instead.
func (*ApproveLoanRequest) Descriptor() ([]byte, []int) {
	return file_loan_proto_rawDescGZIP(), []int{15}
}

func (x *ApproveLoanRequest) GetLoanId() string {
	if x != nil {
		return x.LoanId
	}
	return ""
}

func (x *ApproveLoanRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

var File_loan_proto protoreflect.FileDescriptor

var file_loan_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6c, 0x6f, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x67, 0x69,
	0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x6c, 0x6f, 0x61, 0x6e, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf7, 0x04, 0x0a, 0x0b, 0x4c, 0x6f, 0x61, 0x6e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x6c, 0x6f, 0x61, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x79, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74,
	0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x6f, 0x61,
	0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x6c, 0x6f, 0x61, 0x6e, 0x4d, 0x69, 0x6e, 0x69,
	0x6d, 0x75, 0x6d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x6f, 0x61,
	0x6e, 0x5f, 0x6d, 0x61, 0x78, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x6c, 0x6f, 0x61, 0x6e, 0x4d, 0x61, 0x78, 0x69,
	0x6d, 0x75, 0x6d, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x6f, 0x61,
	0x6e, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x6c, 0x6f, 0x61, 0x6e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x6c,
	0x6f, 0x61, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x6c, 0x6f, 0x61, 0x6e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x30, 0x0a, 0x14, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x5f,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x6c,
	0x6f, 0x61, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x5f, 0x6c, 0x6f, 0x61,
	0x6e, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x64, 0x4c, 0x6f, 0x61, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x5f, 0x6c, 0x6f, 0x61, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x4c, 0x6f, 0x61, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x6c, 0x6f, 0x61, 0x6e, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x6f, 0x61, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x22, 0xce, 0x04, 0x0a, 0x04, 0x4c, 0x6f, 0x61, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x6f, 0x61,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x61, 0x6e,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x61,
	0x6e, 0x65, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6c, 0x6f, 0x61, 0x6e, 0x65, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x6c, 0x6f, 0x61, 0x6e, 0x65, 0x65, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x61, 0x6e, 0x65, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x61, 0x6e, 0x65, 0x65, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x61, 0x6e, 0x65, 0x65, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x12,
	0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x17, 0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x6c, 0x6f, 0x61, 0x6e, 0x2e, 0x4c, 0x6f,
	0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x79,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x79, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73,
	0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f,
	0x61, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0a, 0x6c, 0x6f, 0x61, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0d, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x70, 0x65, 0x6e, 0x61,
	0x6c, 0x74, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x62, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x6f, 0x72, 0x72, 0x6f, 0x77, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x22, 0x5c, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x6e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a,
	0x0c, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x6c, 0x6f, 0x61,
	0x6e, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x0b, 0x6c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22,
	0x5c, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0c, 0x6c,
	0x6f, 0x61, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x6c, 0x6f, 0x61, 0x6e, 0x2e,
	0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x0b, 0x6c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x3e, 0x0a,
	0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0,
	0x41, 0x02, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x30, 0x0a,
	0x11, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x49, 0x64, 0x73, 0x22,
	0x8d, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x69,
	0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x6c, 0x6f, 0x61, 0x6e, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0x81, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0d,
	0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x6c, 0x6f, 0x61,
	0x6e, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x0c, 0x6c,
	0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x3b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x22, 0x3f, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x6f, 0x61, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x6c, 0x6f, 0x61,
	0x6e, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x6c, 0x6f, 0x61,
	0x6e, 0x22, 0x3f, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x6f, 0x61, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x6c, 0x6f,
	0x61, 0x6e, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x6c, 0x6f,
	0x61, 0x6e, 0x22, 0x4a, 0x0a, 0x0a, 0x4c, 0x6f, 0x61, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x49, 0x64, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x73, 0x22, 0x7f,
	0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x6c, 0x6f, 0x61, 0x6e,
	0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0x64, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x6c, 0x6f, 0x61, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x6c, 0x6f, 0x61,
	0x6e, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x05, 0x6c, 0x6f, 0x61, 0x6e, 0x73, 0x12, 0x26, 0x0a,
	0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x61, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x07, 0x6c, 0x6f, 0x61, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x06, 0x6c,
	0x6f, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x07, 0x6c,
	0x6f, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x06, 0x6c, 0x6f, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0c, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x2a, 0x7f, 0x0a, 0x0a, 0x4c, 0x6f, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x14, 0x0a, 0x10, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f,
	0x56, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x46, 0x55, 0x4e, 0x44, 0x53, 0x5f, 0x57, 0x49, 0x54,
	0x48, 0x44, 0x52, 0x41, 0x57, 0x4e, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x02,
	0x12, 0x1a, 0x0a, 0x16, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x55, 0x4e, 0x44,
	0x53, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10,
	0x46, 0x55, 0x4e, 0x44, 0x53, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x45, 0x44,
	0x10, 0x04, 0x32, 0xda, 0x05, 0x0a, 0x0e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x41, 0x50, 0x49, 0x12, 0x78, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c,
	0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x25, 0x2e, 0x67, 0x69, 0x64,
	0x79, 0x6f, 0x6e, 0x2e, 0x6c, 0x6f, 0x61, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c,
	0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1e, 0x22, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x2f,
	0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x3a, 0x01, 0x2a, 0x12,
	0x92, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x25, 0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x6c,
	0x6f, 0x61, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x3e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x38, 0x32, 0x33, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x2f, 0x4c, 0x6f, 0x61, 0x6e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x82, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c,
	0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x25, 0x2e, 0x67, 0x69, 0x64,
	0x79, 0x6f, 0x6e, 0x2e, 0x6c, 0x6f, 0x61, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c,
	0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x28, 0x2a, 0x26, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x2f,
	0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xb3, 0x01, 0x0a, 0x10, 0x4c, 0x69,
	0x73, 0x74, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x24,
	0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x6c, 0x6f, 0x61, 0x6e, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x6c, 0x6f,
	0x61, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x52, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x4c, 0x12, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x61, 0x6d,
	0x61, 0x2f, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x5a, 0x2f,
	0x22, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x2f, 0x4c,
	0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x3a, 0x6c, 0x69, 0x73, 0x74,
	0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x3a, 0x01, 0x2a, 0x12,
	0x7e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x12, 0x22, 0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x6c, 0x6f, 0x61, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x6c,
	0x6f, 0x61, 0x6e, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22,
	0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12, 0x26, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61,
	0x63, 0x68, 0x61, 0x6d, 0x61, 0x2f, 0x4c, 0x6f, 0x61, 0x6e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x32,
	0xc2, 0x04, 0x0a, 0x07, 0x4c, 0x6f, 0x61, 0x6e, 0x41, 0x50, 0x49, 0x12, 0x63, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x6e, 0x12, 0x1e, 0x2e, 0x67, 0x69, 0x64, 0x79,
	0x6f, 0x6e, 0x2e, 0x6c, 0x6f, 0x61, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f,
	0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6d, 0x61, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x2f, 0x6c, 0x6f, 0x61, 0x6e, 0x73, 0x3a, 0x01, 0x2a,
	0x12, 0x72, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x6e, 0x12, 0x1e,
	0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x6c, 0x6f, 0x61, 0x6e, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x32, 0x21,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x2f, 0x6c, 0x6f, 0x61,
	0x6e, 0x73, 0x2f, 0x7b, 0x6c, 0x6f, 0x61, 0x6e, 0x2e, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x69, 0x64,
	0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x89, 0x01, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x61,
	0x6e, 0x73, 0x12, 0x1d, 0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x6c, 0x6f, 0x61, 0x6e,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x6c, 0x6f, 0x61, 0x6e, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x12, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6d, 0x61, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x2f, 0x6c, 0x6f, 0x61, 0x6e, 0x73, 0x5a, 0x21, 0x22,
	0x1c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x2f, 0x6c, 0x6f,
	0x61, 0x6e, 0x73, 0x3a, 0x6c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x61, 0x6e, 0x73, 0x3a, 0x01, 0x2a,
	0x12, 0x5f, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x61, 0x6e, 0x12, 0x1b, 0x2e, 0x67, 0x69,
	0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x6c, 0x6f, 0x61, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x61,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f,
	0x6e, 0x2e, 0x6c, 0x6f, 0x61, 0x6e, 0x2e, 0x4c, 0x6f, 0x61, 0x6e, 0x22, 0x24, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x61, 0x6d,
	0x61, 0x2f, 0x6c, 0x6f, 0x61, 0x6e, 0x73, 0x2f, 0x7b, 0x6c, 0x6f, 0x61, 0x6e, 0x5f, 0x69, 0x64,
	0x7d, 0x12, 0x71, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4c, 0x6f, 0x61, 0x6e,
	0x12, 0x1f, 0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x6c, 0x6f, 0x61, 0x6e, 0x2e, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4c, 0x6f, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x23, 0x22, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x2f,
	0x6c, 0x6f, 0x61, 0x6e, 0x73, 0x3a, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x4c, 0x6f, 0x61,
	0x6e, 0x3a, 0x01, 0x2a, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x61, 0x6d,
	0x61, 0x2d, 0x61, 0x70, 0x70, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61,
	0x63, 0x68, 0x61, 0x6d, 0x61, 0x2f, 0x6c, 0x6f, 0x61, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_loan_proto_rawDescOnce sync.Once
	file_loan_proto_rawDescData = file_loan_proto_rawDesc
)

func file_loan_proto_rawDescGZIP() []byte {
	file_loan_proto_rawDescOnce.Do(func() {
		file_loan_proto_rawDescData = protoimpl.X.CompressGZIP(file_loan_proto_rawDescData)
	})
	return file_loan_proto_rawDescData
}

var file_loan_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_loan_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_loan_proto_goTypes = []interface{}{
	(LoanStatus)(0),                  // 0: gidyon.loan.LoanStatus
	(*LoanProduct)(nil),              // 1: gidyon.loan.LoanProduct
	(*Loan)(nil),                     // 2: gidyon.loan.Loan
	(*CreateLoanProductRequest)(nil), // 3: gidyon.loan.CreateLoanProductRequest
	(*UpdateLoanProductRequest)(nil), // 4: gidyon.loan.UpdateLoanProductRequest
	(*DeleteLoanProductRequest)(nil), // 5: gidyon.loan.DeleteLoanProductRequest
	(*LoanProductFilter)(nil),        // 6: gidyon.loan.LoanProductFilter
	(*ListLoanProductsRequest)(nil),  // 7: gidyon.loan.ListLoanProductsRequest
	(*ListLoanProductsResponse)(nil), // 8: gidyon.loan.ListLoanProductsResponse
	(*GetLoanProductRequest)(nil),    // 9: gidyon.loan.GetLoanProductRequest
	(*CreateLoanRequest)(nil),        // 10: gidyon.loan.CreateLoanRequest
	(*UpdateLoanRequest)(nil),        // 11: gidyon.loan.UpdateLoanRequest
	(*LoanFilter)(nil),               // 12: gidyon.loan.LoanFilter
	(*ListLoansRequest)(nil),         // 13: gidyon.loan.ListLoansRequest
	(*ListLoansResponse)(nil),        // 14: gidyon.loan.ListLoansResponse
	(*GetLoanRequest)(nil),           // 15: gidyon.loan.GetLoanRequest
	(*ApproveLoanRequest)(nil),       // 16: gidyon.loan.ApproveLoanRequest
	(*emptypb.Empty)(nil),            // 17: google.protobuf.Empty
}
var file_loan_proto_depIdxs = []int32{
	0,  // 0: gidyon.loan.Loan.status:type_name -> gidyon.loan.LoanStatus
	1,  // 1: gidyon.loan.CreateLoanProductRequest.loan_product:type_name -> gidyon.loan.LoanProduct
	1,  // 2: gidyon.loan.UpdateLoanProductRequest.loan_product:type_name -> gidyon.loan.LoanProduct
	6,  // 3: gidyon.loan.ListLoanProductsRequest.filter:type_name -> gidyon.loan.LoanProductFilter
	1,  // 4: gidyon.loan.ListLoanProductsResponse.loan_products:type_name -> gidyon.loan.LoanProduct
	2,  // 5: gidyon.loan.CreateLoanRequest.loan:type_name -> gidyon.loan.Loan
	2,  // 6: gidyon.loan.UpdateLoanRequest.loan:type_name -> gidyon.loan.Loan
	12, // 7: gidyon.loan.ListLoansRequest.filter:type_name -> gidyon.loan.LoanFilter
	2,  // 8: gidyon.loan.ListLoansResponse.loans:type_name -> gidyon.loan.Loan
	3,  // 9: gidyon.loan.LoanProductAPI.CreateLoanProduct:input_type -> gidyon.loan.CreateLoanProductRequest
	4,  // 10: gidyon.loan.LoanProductAPI.UpdateLoanProduct:input_type -> gidyon.loan.UpdateLoanProductRequest
	5,  // 11: gidyon.loan.LoanProductAPI.DeleteLoanProduct:input_type -> gidyon.loan.DeleteLoanProductRequest
	7,  // 12: gidyon.loan.LoanProductAPI.ListLoanProducts:input_type -> gidyon.loan.ListLoanProductsRequest
	9,  // 13: gidyon.loan.LoanProductAPI.GetLoanProduct:input_type -> gidyon.loan.GetLoanProductRequest
	10, // 14: gidyon.loan.LoanAPI.CreateLoan:input_type -> gidyon.loan.CreateLoanRequest
	11, // 15: gidyon.loan.LoanAPI.UpdateLoan:input_type -> gidyon.loan.UpdateLoanRequest
	13, // 16: gidyon.loan.LoanAPI.ListLoans:input_type -> gidyon.loan.ListLoansRequest
	15, // 17: gidyon.loan.LoanAPI.GetLoan:input_type -> gidyon.loan.GetLoanRequest
	16, // 18: gidyon.loan.LoanAPI.ApproveLoan:input_type -> gidyon.loan.ApproveLoanRequest
	17, // 19: gidyon.loan.LoanProductAPI.CreateLoanProduct:output_type -> google.protobuf.Empty
	17, // 20: gidyon.loan.LoanProductAPI.UpdateLoanProduct:output_type -> google.protobuf.Empty
	17, // 21: gidyon.loan.LoanProductAPI.DeleteLoanProduct:output_type -> google.protobuf.Empty
	8,  // 22: gidyon.loan.LoanProductAPI.ListLoanProducts:output_type -> gidyon.loan.ListLoanProductsResponse
	1,  // 23: gidyon.loan.LoanProductAPI.GetLoanProduct:output_type -> gidyon.loan.LoanProduct
	17, // 24: gidyon.loan.LoanAPI.CreateLoan:output_type -> google.protobuf.Empty
	17, // 25: gidyon.loan.LoanAPI.UpdateLoan:output_type -> google.protobuf.Empty
	14, // 26: gidyon.loan.LoanAPI.ListLoans:output_type -> gidyon.loan.ListLoansResponse
	2,  // 27: gidyon.loan.LoanAPI.GetLoan:output_type -> gidyon.loan.Loan
	17, // 28: gidyon.loan.LoanAPI.ApproveLoan:output_type -> google.protobuf.Empty
	19, // [19:29] is the sub-list for method output_type
	9,  // [9:19] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_loan_proto_init() }
func file_loan_proto_init() {
	if File_loan_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_loan_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Loan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLoanProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLoanProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLoanProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanProductFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLoanProductsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLoanProductsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLoanProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLoanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLoanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoanFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLoansRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLoansResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLoanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_loan_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveLoanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_loan_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_loan_proto_goTypes,
		DependencyIndexes: file_loan_proto_depIdxs,
		EnumInfos:         file_loan_proto_enumTypes,
		MessageInfos:      file_loan_proto_msgTypes,
	}.Build()
	File_loan_proto = out.File
	file_loan_proto_rawDesc = nil
	file_loan_proto_goTypes = nil
	file_loan_proto_depIdxs = nil
}
