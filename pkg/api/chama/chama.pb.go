// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: chama.proto

package chama

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Chama struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChamaId        string  `protobuf:"bytes,1,opt,name=chama_id,json=chamaId,proto3" json:"chama_id,omitempty"`
	CreatorId      string  `protobuf:"bytes,2,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	Name           string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description    string  `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Status         string  `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	AccountBalance float64 `protobuf:"fixed64,6,opt,name=account_balance,json=accountBalance,proto3" json:"account_balance,omitempty"`
	Active         bool    `protobuf:"varint,7,opt,name=active,proto3" json:"active,omitempty"`
	UpdatedDate    string  `protobuf:"bytes,8,opt,name=updated_date,json=updatedDate,proto3" json:"updated_date,omitempty"`
	CreatedDate    string  `protobuf:"bytes,9,opt,name=created_date,json=createdDate,proto3" json:"created_date,omitempty"`
}

func (x *Chama) Reset() {
	*x = Chama{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chama_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chama) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chama) ProtoMessage() {}

func (x *Chama) ProtoReflect() protoreflect.Message {
	mi := &file_chama_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chama.ProtoReflect.Descriptor instead.
func (*Chama) Descriptor() ([]byte, []int) {
	return file_chama_proto_rawDescGZIP(), []int{0}
}

func (x *Chama) GetChamaId() string {
	if x != nil {
		return x.ChamaId
	}
	return ""
}

func (x *Chama) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *Chama) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Chama) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Chama) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Chama) GetAccountBalance() float64 {
	if x != nil {
		return x.AccountBalance
	}
	return 0
}

func (x *Chama) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Chama) GetUpdatedDate() string {
	if x != nil {
		return x.UpdatedDate
	}
	return ""
}

func (x *Chama) GetCreatedDate() string {
	if x != nil {
		return x.CreatedDate
	}
	return ""
}

type TrustPerson struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Phone string `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *TrustPerson) Reset() {
	*x = TrustPerson{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chama_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrustPerson) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrustPerson) ProtoMessage() {}

func (x *TrustPerson) ProtoReflect() protoreflect.Message {
	mi := &file_chama_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrustPerson.ProtoReflect.Descriptor instead.
func (*TrustPerson) Descriptor() ([]byte, []int) {
	return file_chama_proto_rawDescGZIP(), []int{1}
}

func (x *TrustPerson) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TrustPerson) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *TrustPerson) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type ChamaMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId      string            `protobuf:"bytes,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	ChamaId       string            `protobuf:"bytes,2,opt,name=chama_id,json=chamaId,proto3" json:"chama_id,omitempty"`
	FirstName     string            `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName      string            `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Email         string            `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Phone         string            `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	IdNumber      string            `protobuf:"bytes,7,opt,name=id_number,json=idNumber,proto3" json:"id_number,omitempty"`
	Residence     string            `protobuf:"bytes,8,opt,name=residence,proto3" json:"residence,omitempty"`
	JobDetails    map[string]string `protobuf:"bytes,9,rep,name=job_details,json=jobDetails,proto3" json:"job_details,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Kyc           map[string]string `protobuf:"bytes,10,rep,name=kyc,proto3" json:"kyc,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Beneficiaries []*TrustPerson    `protobuf:"bytes,11,rep,name=beneficiaries,proto3" json:"beneficiaries,omitempty"`
	Guarantees    []*TrustPerson    `protobuf:"bytes,12,rep,name=guarantees,proto3" json:"guarantees,omitempty"`
	Active        bool              `protobuf:"varint,13,opt,name=active,proto3" json:"active,omitempty"`
	Status        string            `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	UpdatedDate   string            `protobuf:"bytes,15,opt,name=updated_date,json=updatedDate,proto3" json:"updated_date,omitempty"`
	RegisterDate  string            `protobuf:"bytes,16,opt,name=register_date,json=registerDate,proto3" json:"register_date,omitempty"`
}

func (x *ChamaMember) Reset() {
	*x = ChamaMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chama_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChamaMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChamaMember) ProtoMessage() {}

func (x *ChamaMember) ProtoReflect() protoreflect.Message {
	mi := &file_chama_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChamaMember.ProtoReflect.Descriptor instead.
func (*ChamaMember) Descriptor() ([]byte, []int) {
	return file_chama_proto_rawDescGZIP(), []int{2}
}

func (x *ChamaMember) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *ChamaMember) GetChamaId() string {
	if x != nil {
		return x.ChamaId
	}
	return ""
}

func (x *ChamaMember) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *ChamaMember) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *ChamaMember) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ChamaMember) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ChamaMember) GetIdNumber() string {
	if x != nil {
		return x.IdNumber
	}
	return ""
}

func (x *ChamaMember) GetResidence() string {
	if x != nil {
		return x.Residence
	}
	return ""
}

func (x *ChamaMember) GetJobDetails() map[string]string {
	if x != nil {
		return x.JobDetails
	}
	return nil
}

func (x *ChamaMember) GetKyc() map[string]string {
	if x != nil {
		return x.Kyc
	}
	return nil
}

func (x *ChamaMember) GetBeneficiaries() []*TrustPerson {
	if x != nil {
		return x.Beneficiaries
	}
	return nil
}

func (x *ChamaMember) GetGuarantees() []*TrustPerson {
	if x != nil {
		return x.Guarantees
	}
	return nil
}

func (x *ChamaMember) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *ChamaMember) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ChamaMember) GetUpdatedDate() string {
	if x != nil {
		return x.UpdatedDate
	}
	return ""
}

func (x *ChamaMember) GetRegisterDate() string {
	if x != nil {
		return x.RegisterDate
	}
	return ""
}

type CreateChamaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chama *Chama `protobuf:"bytes,1,opt,name=chama,proto3" json:"chama,omitempty"`
}

func (x *CreateChamaRequest) Reset() {
	*x = CreateChamaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chama_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChamaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChamaRequest) ProtoMessage() {}

func (x *CreateChamaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chama_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChamaRequest.ProtoReflect.Descriptor instead.
func (*CreateChamaRequest) Descriptor() ([]byte, []int) {
	return file_chama_proto_rawDescGZIP(), []int{3}
}

func (x *CreateChamaRequest) GetChama() *Chama {
	if x != nil {
		return x.Chama
	}
	return nil
}

type UpdateChamaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chama *Chama `protobuf:"bytes,1,opt,name=chama,proto3" json:"chama,omitempty"`
}

func (x *UpdateChamaRequest) Reset() {
	*x = UpdateChamaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chama_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateChamaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChamaRequest) ProtoMessage() {}

func (x *UpdateChamaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chama_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChamaRequest.ProtoReflect.Descriptor instead.
func (*UpdateChamaRequest) Descriptor() ([]byte, []int) {
	return file_chama_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateChamaRequest) GetChama() *Chama {
	if x != nil {
		return x.Chama
	}
	return nil
}

type ChamaFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatorIds []string `protobuf:"bytes,1,rep,name=creator_ids,json=creatorIds,proto3" json:"creator_ids,omitempty"`
}

func (x *ChamaFilter) Reset() {
	*x = ChamaFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chama_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChamaFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChamaFilter) ProtoMessage() {}

func (x *ChamaFilter) ProtoReflect() protoreflect.Message {
	mi := &file_chama_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChamaFilter.ProtoReflect.Descriptor instead.
func (*ChamaFilter) Descriptor() ([]byte, []int) {
	return file_chama_proto_rawDescGZIP(), []int{5}
}

func (x *ChamaFilter) GetCreatorIds() []string {
	if x != nil {
		return x.CreatorIds
	}
	return nil
}

type ListChamasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter    *ChamaFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	PageToken string       `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize  int32        `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListChamasRequest) Reset() {
	*x = ListChamasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chama_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListChamasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChamasRequest) ProtoMessage() {}

func (x *ListChamasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chama_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChamasRequest.ProtoReflect.Descriptor instead.
func (*ListChamasRequest) Descriptor() ([]byte, []int) {
	return file_chama_proto_rawDescGZIP(), []int{6}
}

func (x *ListChamasRequest) GetFilter() *ChamaFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListChamasRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListChamasRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListChamasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chamas        []*Chama `protobuf:"bytes,1,rep,name=chamas,proto3" json:"chamas,omitempty"`
	NextPageToken string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListChamasResponse) Reset() {
	*x = ListChamasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chama_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListChamasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChamasResponse) ProtoMessage() {}

func (x *ListChamasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chama_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChamasResponse.ProtoReflect.Descriptor instead.
func (*ListChamasResponse) Descriptor() ([]byte, []int) {
	return file_chama_proto_rawDescGZIP(), []int{7}
}

func (x *ListChamasResponse) GetChamas() []*Chama {
	if x != nil {
		return x.Chamas
	}
	return nil
}

func (x *ListChamasResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetChamaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChamaId string `protobuf:"bytes,1,opt,name=chama_id,json=chamaId,proto3" json:"chama_id,omitempty"`
}

func (x *GetChamaRequest) Reset() {
	*x = GetChamaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chama_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChamaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChamaRequest) ProtoMessage() {}

func (x *GetChamaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chama_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChamaRequest.ProtoReflect.Descriptor instead.
func (*GetChamaRequest) Descriptor() ([]byte, []int) {
	return file_chama_proto_rawDescGZIP(), []int{8}
}

func (x *GetChamaRequest) GetChamaId() string {
	if x != nil {
		return x.ChamaId
	}
	return ""
}

type CreateChamaMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChamaMember *ChamaMember `protobuf:"bytes,1,opt,name=chama_member,json=chamaMember,proto3" json:"chama_member,omitempty"`
}

func (x *CreateChamaMemberRequest) Reset() {
	*x = CreateChamaMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chama_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChamaMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChamaMemberRequest) ProtoMessage() {}

func (x *CreateChamaMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chama_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChamaMemberRequest.ProtoReflect.Descriptor instead.
func (*CreateChamaMemberRequest) Descriptor() ([]byte, []int) {
	return file_chama_proto_rawDescGZIP(), []int{9}
}

func (x *CreateChamaMemberRequest) GetChamaMember() *ChamaMember {
	if x != nil {
		return x.ChamaMember
	}
	return nil
}

type UpdateChamaMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChamaMember *ChamaMember `protobuf:"bytes,1,opt,name=chama_member,json=chamaMember,proto3" json:"chama_member,omitempty"`
}

func (x *UpdateChamaMemberRequest) Reset() {
	*x = UpdateChamaMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chama_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateChamaMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChamaMemberRequest) ProtoMessage() {}

func (x *UpdateChamaMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chama_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChamaMemberRequest.ProtoReflect.Descriptor instead.
func (*UpdateChamaMemberRequest) Descriptor() ([]byte, []int) {
	return file_chama_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateChamaMemberRequest) GetChamaMember() *ChamaMember {
	if x != nil {
		return x.ChamaMember
	}
	return nil
}

type DeleteChamaMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId string `protobuf:"bytes,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
}

func (x *DeleteChamaMemberRequest) Reset() {
	*x = DeleteChamaMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chama_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChamaMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChamaMemberRequest) ProtoMessage() {}

func (x *DeleteChamaMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chama_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChamaMemberRequest.ProtoReflect.Descriptor instead.
func (*DeleteChamaMemberRequest) Descriptor() ([]byte, []int) {
	return file_chama_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteChamaMemberRequest) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

type ChamaMemberFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChamaIds []string `protobuf:"bytes,1,rep,name=chama_ids,json=chamaIds,proto3" json:"chama_ids,omitempty"`
}

func (x *ChamaMemberFilter) Reset() {
	*x = ChamaMemberFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chama_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChamaMemberFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChamaMemberFilter) ProtoMessage() {}

func (x *ChamaMemberFilter) ProtoReflect() protoreflect.Message {
	mi := &file_chama_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChamaMemberFilter.ProtoReflect.Descriptor instead.
func (*ChamaMemberFilter) Descriptor() ([]byte, []int) {
	return file_chama_proto_rawDescGZIP(), []int{12}
}

func (x *ChamaMemberFilter) GetChamaIds() []string {
	if x != nil {
		return x.ChamaIds
	}
	return nil
}

type ListChamaMembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter    *ChamaMemberFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	PageToken string             `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	PageSize  int32              `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListChamaMembersRequest) Reset() {
	*x = ListChamaMembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chama_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListChamaMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChamaMembersRequest) ProtoMessage() {}

func (x *ListChamaMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chama_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChamaMembersRequest.ProtoReflect.Descriptor instead.
func (*ListChamaMembersRequest) Descriptor() ([]byte, []int) {
	return file_chama_proto_rawDescGZIP(), []int{13}
}

func (x *ListChamaMembersRequest) GetFilter() *ChamaMemberFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListChamaMembersRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListChamaMembersRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListChamaMembersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChamaMembers  []*ChamaMember `protobuf:"bytes,1,rep,name=chama_members,json=chamaMembers,proto3" json:"chama_members,omitempty"`
	NextPageToken string         `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListChamaMembersResponse) Reset() {
	*x = ListChamaMembersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chama_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListChamaMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChamaMembersResponse) ProtoMessage() {}

func (x *ListChamaMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chama_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChamaMembersResponse.ProtoReflect.Descriptor instead.
func (*ListChamaMembersResponse) Descriptor() ([]byte, []int) {
	return file_chama_proto_rawDescGZIP(), []int{14}
}

func (x *ListChamaMembersResponse) GetChamaMembers() []*ChamaMember {
	if x != nil {
		return x.ChamaMembers
	}
	return nil
}

func (x *ListChamaMembersResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetChamaMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId string `protobuf:"bytes,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
}

func (x *GetChamaMemberRequest) Reset() {
	*x = GetChamaMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chama_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChamaMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChamaMemberRequest) ProtoMessage() {}

func (x *GetChamaMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chama_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChamaMemberRequest.ProtoReflect.Descriptor instead.
func (*GetChamaMemberRequest) Descriptor() ([]byte, []int) {
	return file_chama_proto_rawDescGZIP(), []int{15}
}

func (x *GetChamaMemberRequest) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

var File_chama_proto protoreflect.FileDescriptor

var file_chama_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x67,
	0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x75, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96, 0x02, 0x0a, 0x05, 0x43, 0x68, 0x61,
	0x6d, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x22, 0x4d, 0x0a, 0x0b, 0x54, 0x72, 0x75, 0x73, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x22, 0xd5, 0x05, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6d, 0x61, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x6a,
	0x6f, 0x62, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x2e,
	0x43, 0x68, 0x61, 0x6d, 0x61, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x4a, 0x6f, 0x62, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x6a, 0x6f, 0x62,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x34, 0x0a, 0x03, 0x6b, 0x79, 0x63, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x63, 0x68,
	0x61, 0x6d, 0x61, 0x2e, 0x43, 0x68, 0x61, 0x6d, 0x61, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e,
	0x4b, 0x79, 0x63, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x6b, 0x79, 0x63, 0x12, 0x3f, 0x0a,
	0x0d, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x63, 0x68,
	0x61, 0x6d, 0x61, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52,
	0x0d, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x69, 0x65, 0x73, 0x12, 0x39,
	0x0a, 0x0a, 0x67, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x63, 0x68, 0x61, 0x6d,
	0x61, 0x2e, 0x54, 0x72, 0x75, 0x73, 0x74, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x0a, 0x67,
	0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x65, 0x1a, 0x3d, 0x0a, 0x0f, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x36, 0x0a, 0x08, 0x4b, 0x79, 0x63, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x44, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e,
	0x0a, 0x05, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x2e, 0x43, 0x68, 0x61,
	0x6d, 0x61, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x05, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x22, 0x44,
	0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6d, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x63, 0x68, 0x61,
	0x6d, 0x61, 0x2e, 0x43, 0x68, 0x61, 0x6d, 0x61, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x05, 0x63,
	0x68, 0x61, 0x6d, 0x61, 0x22, 0x2e, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6d, 0x61, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61,
	0x6d, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x69, 0x64,
	0x79, 0x6f, 0x6e, 0x2e, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x2e, 0x43, 0x68, 0x61, 0x6d, 0x61, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x69, 0x0a, 0x12, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x68, 0x61, 0x6d, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2b, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x2e, 0x43,
	0x68, 0x61, 0x6d, 0x61, 0x52, 0x06, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x73, 0x12, 0x26, 0x0a, 0x0f,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x31, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6d, 0x61,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x6d, 0x61, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x6d, 0x61, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x5f, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x69, 0x64, 0x79,
	0x6f, 0x6e, 0x2e, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x2e, 0x43, 0x68, 0x61, 0x6d, 0x61, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6d, 0x61,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x5d, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x6d, 0x61, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x41, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x5f, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f,
	0x6e, 0x2e, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x2e, 0x43, 0x68, 0x61, 0x6d, 0x61, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x3c, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x6d, 0x61, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6d, 0x61, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6d,
	0x61, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x61,
	0x6d, 0x61, 0x49, 0x64, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68,
	0x61, 0x6d, 0x61, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x37, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x63, 0x68, 0x61, 0x6d, 0x61,
	0x2e, 0x43, 0x68, 0x61, 0x6d, 0x61, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x68, 0x61, 0x6d, 0x61, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x5f, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x69, 0x64,
	0x79, 0x6f, 0x6e, 0x2e, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x2e, 0x43, 0x68, 0x61, 0x6d, 0x61, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65,
	0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x39, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x61, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x08, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x32, 0xc8, 0x03, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x6d, 0x61,
	0x41, 0x50, 0x49, 0x12, 0x5f, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x6d, 0x61, 0x12, 0x20, 0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x63, 0x68, 0x61, 0x6d,
	0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6d, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x16, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x10, 0x22, 0x0b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x68, 0x61, 0x6d, 0x61,
	0x73, 0x3a, 0x01, 0x2a, 0x12, 0x70, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x6d, 0x61, 0x12, 0x20, 0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x63, 0x68, 0x61,
	0x6d, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6d, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x27, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x21, 0x32, 0x1c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x68, 0x61, 0x6d,
	0x61, 0x73, 0x2f, 0x7b, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x2e, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x5f,
	0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x88, 0x01, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x68, 0x61, 0x6d, 0x61, 0x73, 0x12, 0x1f, 0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x63,
	0x68, 0x61, 0x6d, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x61, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e,
	0x63, 0x68, 0x61, 0x6d, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x61, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31,
	0x12, 0x0b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x73, 0x5a, 0x22, 0x22,
	0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x73, 0x3a, 0x6c, 0x69, 0x73,
	0x74, 0x43, 0x68, 0x61, 0x6d, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x3a, 0x01,
	0x2a, 0x12, 0x5e, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x61, 0x12, 0x1d, 0x2e,
	0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x6d, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x67,
	0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x2e, 0x43, 0x68, 0x61, 0x6d,
	0x61, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x63, 0x68, 0x61, 0x6d, 0x61, 0x73, 0x2f, 0x7b, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x5f, 0x69, 0x64,
	0x7d, 0x32, 0xad, 0x05, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6d, 0x61, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x41, 0x50, 0x49, 0x12, 0x71, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x6d, 0x61, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x67, 0x69, 0x64, 0x79,
	0x6f, 0x6e, 0x2e, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x6d, 0x61, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x16, 0x22, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x8a, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x6d, 0x61, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x26, 0x2e,
	0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6d, 0x61, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x35, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x32, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x68, 0x61, 0x6d,
	0x61, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x5f,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x7a, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x6d, 0x61, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x67, 0x69, 0x64, 0x79,
	0x6f, 0x6e, 0x2e, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x6d, 0x61, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1f, 0x2a, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d,
	0x12, 0xa5, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x61, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x25, 0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x63,
	0x68, 0x61, 0x6d, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x61, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x67,
	0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x68, 0x61, 0x6d, 0x61, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x42, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3c, 0x12, 0x11, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x5a,
	0x27, 0x22, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x3a, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6d, 0x61, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x77, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x6d, 0x61, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x67, 0x69, 0x64,
	0x79, 0x6f, 0x6e, 0x2e, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x6d, 0x61, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2e, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x2e, 0x43,
	0x68, 0x61, 0x6d, 0x61, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x7d, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x67, 0x69, 0x64, 0x79, 0x6f, 0x6e, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x61, 0x6d, 0x61, 0x2d, 0x61,
	0x70, 0x70, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x68, 0x61, 0x6d, 0x61,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chama_proto_rawDescOnce sync.Once
	file_chama_proto_rawDescData = file_chama_proto_rawDesc
)

func file_chama_proto_rawDescGZIP() []byte {
	file_chama_proto_rawDescOnce.Do(func() {
		file_chama_proto_rawDescData = protoimpl.X.CompressGZIP(file_chama_proto_rawDescData)
	})
	return file_chama_proto_rawDescData
}

var file_chama_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_chama_proto_goTypes = []interface{}{
	(*Chama)(nil),                    // 0: gidyon.chama.Chama
	(*TrustPerson)(nil),              // 1: gidyon.chama.TrustPerson
	(*ChamaMember)(nil),              // 2: gidyon.chama.ChamaMember
	(*CreateChamaRequest)(nil),       // 3: gidyon.chama.CreateChamaRequest
	(*UpdateChamaRequest)(nil),       // 4: gidyon.chama.UpdateChamaRequest
	(*ChamaFilter)(nil),              // 5: gidyon.chama.ChamaFilter
	(*ListChamasRequest)(nil),        // 6: gidyon.chama.ListChamasRequest
	(*ListChamasResponse)(nil),       // 7: gidyon.chama.ListChamasResponse
	(*GetChamaRequest)(nil),          // 8: gidyon.chama.GetChamaRequest
	(*CreateChamaMemberRequest)(nil), // 9: gidyon.chama.CreateChamaMemberRequest
	(*UpdateChamaMemberRequest)(nil), // 10: gidyon.chama.UpdateChamaMemberRequest
	(*DeleteChamaMemberRequest)(nil), // 11: gidyon.chama.DeleteChamaMemberRequest
	(*ChamaMemberFilter)(nil),        // 12: gidyon.chama.ChamaMemberFilter
	(*ListChamaMembersRequest)(nil),  // 13: gidyon.chama.ListChamaMembersRequest
	(*ListChamaMembersResponse)(nil), // 14: gidyon.chama.ListChamaMembersResponse
	(*GetChamaMemberRequest)(nil),    // 15: gidyon.chama.GetChamaMemberRequest
	nil,                              // 16: gidyon.chama.ChamaMember.JobDetailsEntry
	nil,                              // 17: gidyon.chama.ChamaMember.KycEntry
	(*emptypb.Empty)(nil),            // 18: google.protobuf.Empty
}
var file_chama_proto_depIdxs = []int32{
	16, // 0: gidyon.chama.ChamaMember.job_details:type_name -> gidyon.chama.ChamaMember.JobDetailsEntry
	17, // 1: gidyon.chama.ChamaMember.kyc:type_name -> gidyon.chama.ChamaMember.KycEntry
	1,  // 2: gidyon.chama.ChamaMember.beneficiaries:type_name -> gidyon.chama.TrustPerson
	1,  // 3: gidyon.chama.ChamaMember.guarantees:type_name -> gidyon.chama.TrustPerson
	0,  // 4: gidyon.chama.CreateChamaRequest.chama:type_name -> gidyon.chama.Chama
	0,  // 5: gidyon.chama.UpdateChamaRequest.chama:type_name -> gidyon.chama.Chama
	5,  // 6: gidyon.chama.ListChamasRequest.filter:type_name -> gidyon.chama.ChamaFilter
	0,  // 7: gidyon.chama.ListChamasResponse.chamas:type_name -> gidyon.chama.Chama
	2,  // 8: gidyon.chama.CreateChamaMemberRequest.chama_member:type_name -> gidyon.chama.ChamaMember
	2,  // 9: gidyon.chama.UpdateChamaMemberRequest.chama_member:type_name -> gidyon.chama.ChamaMember
	12, // 10: gidyon.chama.ListChamaMembersRequest.filter:type_name -> gidyon.chama.ChamaMemberFilter
	2,  // 11: gidyon.chama.ListChamaMembersResponse.chama_members:type_name -> gidyon.chama.ChamaMember
	3,  // 12: gidyon.chama.ChamaAPI.CreateChama:input_type -> gidyon.chama.CreateChamaRequest
	4,  // 13: gidyon.chama.ChamaAPI.UpdateChama:input_type -> gidyon.chama.UpdateChamaRequest
	6,  // 14: gidyon.chama.ChamaAPI.ListChamas:input_type -> gidyon.chama.ListChamasRequest
	8,  // 15: gidyon.chama.ChamaAPI.GetChama:input_type -> gidyon.chama.GetChamaRequest
	9,  // 16: gidyon.chama.ChamaMemberAPI.CreateChamaMember:input_type -> gidyon.chama.CreateChamaMemberRequest
	10, // 17: gidyon.chama.ChamaMemberAPI.UpdateChamaMember:input_type -> gidyon.chama.UpdateChamaMemberRequest
	11, // 18: gidyon.chama.ChamaMemberAPI.DeleteChamaMember:input_type -> gidyon.chama.DeleteChamaMemberRequest
	13, // 19: gidyon.chama.ChamaMemberAPI.ListChamaMembers:input_type -> gidyon.chama.ListChamaMembersRequest
	15, // 20: gidyon.chama.ChamaMemberAPI.GetChamaMember:input_type -> gidyon.chama.GetChamaMemberRequest
	18, // 21: gidyon.chama.ChamaAPI.CreateChama:output_type -> google.protobuf.Empty
	18, // 22: gidyon.chama.ChamaAPI.UpdateChama:output_type -> google.protobuf.Empty
	7,  // 23: gidyon.chama.ChamaAPI.ListChamas:output_type -> gidyon.chama.ListChamasResponse
	0,  // 24: gidyon.chama.ChamaAPI.GetChama:output_type -> gidyon.chama.Chama
	18, // 25: gidyon.chama.ChamaMemberAPI.CreateChamaMember:output_type -> google.protobuf.Empty
	18, // 26: gidyon.chama.ChamaMemberAPI.UpdateChamaMember:output_type -> google.protobuf.Empty
	18, // 27: gidyon.chama.ChamaMemberAPI.DeleteChamaMember:output_type -> google.protobuf.Empty
	14, // 28: gidyon.chama.ChamaMemberAPI.ListChamaMembers:output_type -> gidyon.chama.ListChamaMembersResponse
	2,  // 29: gidyon.chama.ChamaMemberAPI.GetChamaMember:output_type -> gidyon.chama.ChamaMember
	21, // [21:30] is the sub-list for method output_type
	12, // [12:21] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_chama_proto_init() }
func file_chama_proto_init() {
	if File_chama_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chama_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chama); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chama_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrustPerson); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chama_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChamaMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chama_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChamaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chama_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateChamaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chama_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChamaFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chama_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListChamasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chama_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListChamasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chama_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChamaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chama_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChamaMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chama_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateChamaMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chama_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChamaMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chama_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChamaMemberFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chama_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListChamaMembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chama_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListChamaMembersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chama_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChamaMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chama_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_chama_proto_goTypes,
		DependencyIndexes: file_chama_proto_depIdxs,
		MessageInfos:      file_chama_proto_msgTypes,
	}.Build()
	File_chama_proto = out.File
	file_chama_proto_rawDesc = nil
	file_chama_proto_goTypes = nil
	file_chama_proto_depIdxs = nil
}
